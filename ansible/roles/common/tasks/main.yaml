---
- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: true

- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest  # noqa package-latest
    force_apt_get: true

- name: Install apt packages
  apt:
    name:
      - ansible-lint
      - dnsutils
      - iftop
      - iperf3
      - jq
      - nmap
      - pylint
      - python3-pip
      - sshpass
      - tcpdump
      - traceroute
      - whois
      - yamllint
    state: present

- name: Remove useless packages from the cache
  apt:
    autoclean: true

- name: Remove dependencies that are no longer required
  apt:
    autoremove: true

- name: Edit .bashrc to use alias
  replace:
    path: /home/{{ privateuser }}/.bashrc
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
    backup: true
  with_items:
    - regexp: '#alias grep'
      replace: 'alias grep'
    - regexp: '#alias egrep'
      replace: 'alias egrep'
    - regexp: '#alias fgrep'
      replace: 'alias fgrep'
    - regexp: '#alias ll'
      replace: 'alias ll'

- name: Check homedir stat
  stat:
    path: "/home/{{ privateuser }}"
  register: homedir_stat

- name: Create ~/.ssh/keys
  file:
    path: "/home/{{ privateuser }}/.ssh/keys"
    state: directory
    recurse: true
    owner: "{{ homedir_stat.stat.pw_name }}"
    group: "{{ homedir_stat.stat.gr_name }}"
    mode: '0700'

- name: Set authorized key
  authorized_key:
    user: "{{ privateuser }}"
    state: present
    key: "{{ lookup('file', 'files/yasu-homepc-ed25519.pub') }}"

- name: Set git user.email
  git_config:
    name: user.email
    scope: global
    value: "{{ gitemail }}"
  become: true
  become_user: "{{ privateuser }}"

- name: Set git user.name
  git_config:
    name: user.name
    scope: global
    value: "{{ gituser }}"
  become: true
  become_user: "{{ privateuser }}"
